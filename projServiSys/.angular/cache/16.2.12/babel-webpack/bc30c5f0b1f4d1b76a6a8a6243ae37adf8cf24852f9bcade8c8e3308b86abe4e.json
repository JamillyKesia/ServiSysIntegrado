{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrdemService {\n  constructor(http) {\n    this.http = http;\n    this.baseURL = 'http://localhost:5124/api/OrdemServico';\n    this.getOrdem = `${environment.api}/api/OrdemServico`;\n    this.postOrdem = `${environment.api}/api/OrdemServico`;\n    this.getIdOrdem = `${environment.api}/api/OrdemServico/{id}`;\n    this.putOrdem = `${environment.api}/api/OrdemServico/{id}`;\n    this.getUserOrdem = `${environment.api}/api/OrdemServico/usuario/{idUsuario}`;\n    this.patchIdOrdem = `${environment.api}/api/OrdemServico/Aprovado/{id}`;\n  }\n  obterOrdem() {\n    return this.http.get(this.getOrdem);\n  }\n  cadastrarOrdem(ordens) {\n    return this.http.post(this.postOrdem, ordens);\n  }\n  obterIdOrdem() {\n    return this.http.get(this.getIdOrdem);\n  }\n  atualizarOrdem(ordens) {\n    return this.http.put(this.putOrdem, ordens);\n  }\n  obterUserOrdem() {\n    return this.http.get(this.getUserOrdem);\n  }\n  //patch\n  alteraOrdem(ordens) {\n    // const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.patch(this.patchIdOrdem, ordens);\n  }\n  static #_ = this.ɵfac = function OrdemService_Factory(t) {\n    return new (t || OrdemService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrdemService,\n    factory: OrdemService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","OrdemService","constructor","http","baseURL","getOrdem","api","postOrdem","getIdOrdem","putOrdem","getUserOrdem","patchIdOrdem","obterOrdem","get","cadastrarOrdem","ordens","post","obterIdOrdem","atualizarOrdem","put","obterUserOrdem","alteraOrdem","patch","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jamil\\SSintegrado\\projServiSys\\src\\app\\services\\ordem.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\"\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user';\nimport { OrdemServico } from '../models/ordem-servico';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdemService {\n\n  baseURL = 'http://localhost:5124/api/OrdemServico';\n\n  private getOrdem = `${environment.api}/api/OrdemServico`;\n  private postOrdem = `${environment.api}/api/OrdemServico`;\n  private getIdOrdem = `${environment.api}/api/OrdemServico/{id}`;\n  private putOrdem = `${environment.api}/api/OrdemServico/{id}`;\n  private getUserOrdem = `${environment.api}/api/OrdemServico/usuario/{idUsuario}`;\n  private patchIdOrdem = `${environment.api}/api/OrdemServico/Aprovado/{id}`;\n\n  constructor(private http: HttpClient) {\n  }\n\n  obterOrdem(): Observable<OrdemServico[]>{\n    return this.http.get<OrdemServico[]>(this.getOrdem);\n  }\n\n  cadastrarOrdem(ordens: OrdemServico){\n    return this.http.post<User>(this.postOrdem,ordens);\n  }\n\n  obterIdOrdem(){\n    return this.http.get<OrdemServico[]>(this.getIdOrdem);\n  }\n\n  atualizarOrdem(ordens: OrdemServico){\n    return this.http.put<OrdemServico>(this.putOrdem,ordens);\n  }\n\n  obterUserOrdem(){\n    return this.http.get<OrdemServico[]>(this.getUserOrdem);\n  }\n\n  //patch\n  alteraOrdem(ordens: OrdemServico){\n   // const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.patch<OrdemServico[]>(this.patchIdOrdem, ordens);\n  }\n\n}\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;;;AAQ1D,OAAM,MAAOC,YAAY;EAWvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IATxB,KAAAC,OAAO,GAAG,wCAAwC;IAE1C,KAAAC,QAAQ,GAAG,GAAGL,WAAW,CAACM,GAAG,mBAAmB;IAChD,KAAAC,SAAS,GAAG,GAAGP,WAAW,CAACM,GAAG,mBAAmB;IACjD,KAAAE,UAAU,GAAG,GAAGR,WAAW,CAACM,GAAG,wBAAwB;IACvD,KAAAG,QAAQ,GAAG,GAAGT,WAAW,CAACM,GAAG,wBAAwB;IACrD,KAAAI,YAAY,GAAG,GAAGV,WAAW,CAACM,GAAG,uCAAuC;IACxE,KAAAK,YAAY,GAAG,GAAGX,WAAW,CAACM,GAAG,iCAAiC;EAG1E;EAEAM,UAAUA,CAAA;IACR,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAiB,IAAI,CAACR,QAAQ,CAAC;EACrD;EAEAS,cAAcA,CAACC,MAAoB;IACjC,OAAO,IAAI,CAACZ,IAAI,CAACa,IAAI,CAAO,IAAI,CAACT,SAAS,EAACQ,MAAM,CAAC;EACpD;EAEAE,YAAYA,CAAA;IACV,OAAO,IAAI,CAACd,IAAI,CAACU,GAAG,CAAiB,IAAI,CAACL,UAAU,CAAC;EACvD;EAEAU,cAAcA,CAACH,MAAoB;IACjC,OAAO,IAAI,CAACZ,IAAI,CAACgB,GAAG,CAAe,IAAI,CAACV,QAAQ,EAACM,MAAM,CAAC;EAC1D;EAEAK,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACjB,IAAI,CAACU,GAAG,CAAiB,IAAI,CAACH,YAAY,CAAC;EACzD;EAEA;EACAW,WAAWA,CAACN,MAAoB;IAC/B;IACC,OAAO,IAAI,CAACZ,IAAI,CAACmB,KAAK,CAAiB,IAAI,CAACX,YAAY,EAAEI,MAAM,CAAC;EACnE;EAAC,QAAAQ,CAAA,G;qBAtCUtB,YAAY,EAAAuB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZ3B,YAAY;IAAA4B,OAAA,EAAZ5B,YAAY,CAAA6B,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}