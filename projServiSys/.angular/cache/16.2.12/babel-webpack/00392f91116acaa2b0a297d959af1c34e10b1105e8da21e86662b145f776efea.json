{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let HomeComponent = class HomeComponent {\n  get filtroLista() {\n    return this._filtrosListado;\n  }\n  set filtroLista(value) {\n    this._filtrosListado = value;\n    this.ordensFiltradas = this.filtroLista ? this.filtrarOrdens(this.filtroLista) : this.ordens;\n  }\n  // public filtrarOrdens(filtrarPor: string):any{\n  //   filtrarPor = filtrarPor.toLocaleLowerCase();\n  //   return this.ordens.filter( //o tema é oq vc vai filtrar, mudar pelo certo\n  //   ordem.id.toLocaleLowerCase().indexOf(filtrarPor) !== -1 || \n  //   ordem.local.toLocaleLowerCase().indexOf(filtrarPor) !== -1\n  //     //(ordem: { tema: string; }) => ordem.tema.toLocaleLowerCase().indexOf(filtrarPor) !== -1 \n  //     //||\n  //     //ordem.local.toLocaleLowerCase().indexOf(filtrarPor) !== -1\n  //   );\n  // }\n  filtrarOrdens(filtrarPor) {\n    filtrarPor = filtrarPor.toLocaleLowerCase();\n    return this.ordens.filter(ordem => ordem.descricaoProblema.toLocaleLowerCase().indexOf(filtrarPor) !== -1);\n  }\n  constructor(modalSS, ordemService) {\n    this.modalSS = modalSS;\n    this.ordemService = ordemService;\n    this.modalSwitch = false;\n    this.ordens = [];\n    this.ordensFiltradas = [];\n    this._filtrosListado = '';\n    // console.log('TO AQUI', environment.api)\n    //this.obterOrdensCadastradas();\n  }\n\n  ngOnInit() {\n    this.modalSS.$modal.subscribe(valor => {\n      this.modalSwitch = valor;\n    });\n    this.GetOrdemServico();\n  }\n  openModel2() {\n    this.modalSwitch = true;\n  }\n  GetOrdemServico() {\n    this.ordemService.GetOrdemServico().subscribe({\n      next: ordens => {\n        this.ordens = ordens;\n        this.ordensFiltradas = this.ordens;\n      },\n      error: error => console.log(error)\n    });\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})], HomeComponent);","map":{"version":3,"names":["Component","HomeComponent","filtroLista","_filtrosListado","value","ordensFiltradas","filtrarOrdens","ordens","filtrarPor","toLocaleLowerCase","filter","ordem","descricaoProblema","indexOf","constructor","modalSS","ordemService","modalSwitch","ngOnInit","$modal","subscribe","valor","GetOrdemServico","openModel2","next","error","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\jamil\\SSintegrado\\projServiSys\\src\\app\\pages\\home\\home.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent {\n  modalSwitch: boolean = false;\n\n  public ordens: OrdemServico[] = [];\n  public ordensFiltradas: OrdemServico[] = [];\n\n  private _filtrosListado: string = '';\n\n  public get filtroLista(): string{\n    return this._filtrosListado;\n  }\n\n  public set filtroLista(value: string){\n    this._filtrosListado = value;\n    this.ordensFiltradas = this.filtroLista ? this.filtrarOrdens(this.filtroLista) : this.ordens;\n  }\n\n  // public filtrarOrdens(filtrarPor: string):any{\n  //   filtrarPor = filtrarPor.toLocaleLowerCase();\n  //   return this.ordens.filter( //o tema é oq vc vai filtrar, mudar pelo certo\n  //   ordem.id.toLocaleLowerCase().indexOf(filtrarPor) !== -1 || \n  //   ordem.local.toLocaleLowerCase().indexOf(filtrarPor) !== -1\n  //     //(ordem: { tema: string; }) => ordem.tema.toLocaleLowerCase().indexOf(filtrarPor) !== -1 \n  //     //||\n  //     //ordem.local.toLocaleLowerCase().indexOf(filtrarPor) !== -1\n  //   );\n  // }\n\n  public filtrarOrdens(filtrarPor: string): OrdemServico[] {\n    filtrarPor = filtrarPor.toLocaleLowerCase();\n    return this.ordens.filter(\n      ordem => ordem.descricaoProblema.toLocaleLowerCase().indexOf(filtrarPor) !== -1 \n    );\n  }\n  \n  constructor(\n\n    private modalSS: SwitchService,\n    private ordemService: OrdemService) {\n      // console.log('TO AQUI', environment.api)\n      //this.obterOrdensCadastradas();\n  }\n\n  public ngOnInit(){\n    this.modalSS.$modal.subscribe((valor) => {this.modalSwitch = valor}); \n    this.GetOrdemServico();\n  }\n\n  public openModel2(){\n    this.modalSwitch = true;\n  }\n\n  public GetOrdemServico(): void {\n    this.ordemService.GetOrdemServico().subscribe({\n      next: (ordens: OrdemServico[]) => {\n      this.ordens = ordens;\n      this.ordensFiltradas = this.ordens;\n      },\n      error: (error:any) => console.log(error)\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAQlC,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAQxB,IAAWC,WAAWA,CAAA;IACpB,OAAO,IAAI,CAACC,eAAe;EAC7B;EAEA,IAAWD,WAAWA,CAACE,KAAa;IAClC,IAAI,CAACD,eAAe,GAAGC,KAAK;IAC5B,IAAI,CAACC,eAAe,GAAG,IAAI,CAACH,WAAW,GAAG,IAAI,CAACI,aAAa,CAAC,IAAI,CAACJ,WAAW,CAAC,GAAG,IAAI,CAACK,MAAM;EAC9F;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEOD,aAAaA,CAACE,UAAkB;IACrCA,UAAU,GAAGA,UAAU,CAACC,iBAAiB,EAAE;IAC3C,OAAO,IAAI,CAACF,MAAM,CAACG,MAAM,CACvBC,KAAK,IAAIA,KAAK,CAACC,iBAAiB,CAACH,iBAAiB,EAAE,CAACI,OAAO,CAACL,UAAU,CAAC,KAAK,CAAC,CAAC,CAChF;EACH;EAEAM,YAEUC,OAAsB,EACtBC,YAA0B;IAD1B,KAAAD,OAAO,GAAPA,OAAO;IACP,KAAAC,YAAY,GAAZA,YAAY;IArCtB,KAAAC,WAAW,GAAY,KAAK;IAErB,KAAAV,MAAM,GAAmB,EAAE;IAC3B,KAAAF,eAAe,GAAmB,EAAE;IAEnC,KAAAF,eAAe,GAAW,EAAE;IAiChC;IACA;EACJ;;EAEOe,QAAQA,CAAA;IACb,IAAI,CAACH,OAAO,CAACI,MAAM,CAACC,SAAS,CAAEC,KAAK,IAAI;MAAE,IAAI,CAACJ,WAAW,GAAGI,KAAK;IAAA,CAAC,CAAC;IACpE,IAAI,CAACC,eAAe,EAAE;EACxB;EAEOC,UAAUA,CAAA;IACf,IAAI,CAACN,WAAW,GAAG,IAAI;EACzB;EAEOK,eAAeA,CAAA;IACpB,IAAI,CAACN,YAAY,CAACM,eAAe,EAAE,CAACF,SAAS,CAAC;MAC5CI,IAAI,EAAGjB,MAAsB,IAAI;QACjC,IAAI,CAACA,MAAM,GAAGA,MAAM;QACpB,IAAI,CAACF,eAAe,GAAG,IAAI,CAACE,MAAM;MAClC,CAAC;MACDkB,KAAK,EAAGA,KAAS,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK;KACxC,CAAC;EACJ;CACD;AA7DYxB,aAAa,GAAA2B,UAAA,EALzB5B,SAAS,CAAC;EACT6B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACW9B,aAAa,CA6DzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}