{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class SwitchService {\n  patchValue(ordens) {\n    throw new Error('Method not implemented.');\n  }\n  constructor() {\n    this.$modal = new EventEmitter();\n  }\n  static #_ = this.ɵfac = function SwitchService_Factory(t) {\n    return new (t || SwitchService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SwitchService,\n    factory: SwitchService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["EventEmitter","SwitchService","patchValue","ordens","Error","constructor","$modal","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jamil\\SSintegrado\\projServiSys\\src\\app\\services\\switch.service.ts"],"sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\nimport { OrdemServico } from '../models/ordem-servico';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SwitchService {\n  patchValue(ordens: OrdemServico) {\n    throw new Error('Method not implemented.');\n  }\n\n  constructor() { }\n\n  $modal = new EventEmitter<any>();\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAoB,eAAe;;AAMxD,OAAM,MAAOC,aAAa;EACxBC,UAAUA,CAACC,MAAoB;IAC7B,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAEAC,YAAA;IAEA,KAAAC,MAAM,GAAG,IAAIN,YAAY,EAAO;EAFhB;EAAC,QAAAO,CAAA,G;qBALNN,aAAa;EAAA;EAAA,QAAAO,EAAA,G;WAAbP,aAAa;IAAAQ,OAAA,EAAbR,aAAa,CAAAS,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}