{"ast":null,"code":"import { take } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrdemService {\n  constructor(http) {\n    this.http = http;\n    this.baseURL = environment.apiURL + 'api/OrdemServico';\n  }\n  GetOrdemServico() {\n    return this.http.get(this.baseURL).pipe(take(1));\n    //return this.http.get<OrdemServico[]>(this.baseURL);\n  }\n\n  GetOrdemServicoByUsuario(idUsuario) {\n    return this.http.get(`${this.baseURL}/usuario/${idUsuario}`).pipe(take(1));\n  }\n  GetOrdemServicoById(id) {\n    return this.http.get(`${this.baseURL}/${id}`).pipe(take(1));\n  }\n  PostOrdemServico(ordens) {\n    return this.http.post(this.baseURL, ordens).pipe(take(1));\n  }\n  /*public PutOrdemServico(id: number, ordens: OrdemServico): Observable<OrdemServico>{\n    return this.http\n    .put<OrdemServico>(`${this.baseURL}${id}`,ordens).pipe(take(1));\n  }*/\n  PatchOrdemServico(id, changes) {\n    return this.http.patch(`${this.baseURL}/Aprovado/${id}`, changes).pipe(take(1));\n  }\n  static #_ = this.ɵfac = function OrdemService_Factory(t) {\n    return new (t || OrdemService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrdemService,\n    factory: OrdemService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["take","environment","OrdemService","constructor","http","baseURL","apiURL","GetOrdemServico","get","pipe","GetOrdemServicoByUsuario","idUsuario","GetOrdemServicoById","id","PostOrdemServico","ordens","post","PatchOrdemServico","changes","patch","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jamil\\SSintegrado\\projServiSys\\src\\app\\services\\ordem.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { OrdemServico } from '../models/ordem-servico';\nimport { Observable, take } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdemService {\n\n  baseURL = environment.apiURL + 'api/OrdemServico';\n\n  constructor(private http: HttpClient) {}\n\n  public GetOrdemServico(): Observable<OrdemServico[]>{\n    return this.http\n    .get<OrdemServico[]>(this.baseURL).pipe(take(1));\n    //return this.http.get<OrdemServico[]>(this.baseURL);\n  }\n\n  public GetOrdemServicoByUsuario(idUsuario: number): Observable<OrdemServico[]>  {\n    return this.http\n    .get<OrdemServico[]>(`${this.baseURL}/usuario/${idUsuario}`).pipe(take(1));\n  }\n\n  public GetOrdemServicoById(id: number): Observable<OrdemServico>{\n    return this.http\n    .get<OrdemServico>(`${this.baseURL}/${id}`).pipe(take(1));\n  }\n\n  public PostOrdemServico(ordens: OrdemServico): Observable<OrdemServico>{\n    return this.http\n    .post<OrdemServico>(this.baseURL, ordens).pipe(take(1));\n  }\n\n  /*public PutOrdemServico(id: number, ordens: OrdemServico): Observable<OrdemServico>{\n    return this.http\n    .put<OrdemServico>(`${this.baseURL}${id}`,ordens).pipe(take(1));\n  }*/\n\n  public PatchOrdemServico(id: number, changes: Partial<OrdemServico>): Observable<any> {\n    return this.http\n    .patch(`${this.baseURL}/Aprovado/${id}`, changes).pipe(take(1));\n  }\n\n}"],"mappings":"AAGA,SAAqBA,IAAI,QAAQ,MAAM;AACvC,SAASC,WAAW,QAAQ,8BAA8B;;;AAK1D,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,OAAO,GAAGJ,WAAW,CAACK,MAAM,GAAG,kBAAkB;EAEV;EAEhCC,eAAeA,CAAA;IACpB,OAAO,IAAI,CAACH,IAAI,CACfI,GAAG,CAAiB,IAAI,CAACH,OAAO,CAAC,CAACI,IAAI,CAACT,IAAI,CAAC,CAAC,CAAC,CAAC;IAChD;EACF;;EAEOU,wBAAwBA,CAACC,SAAiB;IAC/C,OAAO,IAAI,CAACP,IAAI,CACfI,GAAG,CAAiB,GAAG,IAAI,CAACH,OAAO,YAAYM,SAAS,EAAE,CAAC,CAACF,IAAI,CAACT,IAAI,CAAC,CAAC,CAAC,CAAC;EAC5E;EAEOY,mBAAmBA,CAACC,EAAU;IACnC,OAAO,IAAI,CAACT,IAAI,CACfI,GAAG,CAAe,GAAG,IAAI,CAACH,OAAO,IAAIQ,EAAE,EAAE,CAAC,CAACJ,IAAI,CAACT,IAAI,CAAC,CAAC,CAAC,CAAC;EAC3D;EAEOc,gBAAgBA,CAACC,MAAoB;IAC1C,OAAO,IAAI,CAACX,IAAI,CACfY,IAAI,CAAe,IAAI,CAACX,OAAO,EAAEU,MAAM,CAAC,CAACN,IAAI,CAACT,IAAI,CAAC,CAAC,CAAC,CAAC;EACzD;EAEA;;;;EAKOiB,iBAAiBA,CAACJ,EAAU,EAAEK,OAA8B;IACjE,OAAO,IAAI,CAACd,IAAI,CACfe,KAAK,CAAC,GAAG,IAAI,CAACd,OAAO,aAAaQ,EAAE,EAAE,EAAEK,OAAO,CAAC,CAACT,IAAI,CAACT,IAAI,CAAC,CAAC,CAAC,CAAC;EACjE;EAAC,QAAAoB,CAAA,G;qBAnCUlB,YAAY,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZvB,YAAY;IAAAwB,OAAA,EAAZxB,YAAY,CAAAyB,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}