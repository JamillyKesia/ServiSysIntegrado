{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrdemService {\n  // private getOrdem = `${environment.api}/api/OrdemServico`;\n  // private postOrdem = `${environment.api}/api/OrdemServico`;\n  // private getIdOrdem = `${environment.api}/api/OrdemServico/{id}`;\n  // private putOrdem = `${environment.api}/api/OrdemServico/{id}`;\n  // private getUserOrdem = `${environment.api}/api/OrdemServico/usuario/{idUsuario}`;\n  // private patchIdOrdem = `${environment.api}/api/OrdemServico/Aprovado/{id}`;\n  constructor(http) {\n    this.http = http;\n    this.baseURL = 'http://localhost:5124/api/OrdemServico';\n  }\n  getOrdens() {\n    return this.http.get(this.baseURL);\n  }\n  cadastrarOrdem(ordens) {\n    return this.http.post(this.postOrdem, ordens);\n  }\n  obterOrdemById() {\n    return this.http.get(this.getIdOrdem);\n  }\n  atualizarOrdem(ordens) {\n    return this.http.put(this.putOrdem, ordens);\n  }\n  obterUserOrdem() {\n    return this.http.get(this.getUserOrdem);\n  }\n  //patch\n  alteraOrdem(ordens) {\n    // const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.patch(this.patchIdOrdem, ordens);\n  }\n  static #_ = this.ɵfac = function OrdemService_Factory(t) {\n    return new (t || OrdemService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrdemService,\n    factory: OrdemService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["OrdemService","constructor","http","baseURL","getOrdens","get","cadastrarOrdem","ordens","post","postOrdem","obterOrdemById","getIdOrdem","atualizarOrdem","put","putOrdem","obterUserOrdem","getUserOrdem","alteraOrdem","patch","patchIdOrdem","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jamil\\SSintegrado\\projServiSys\\src\\app\\services\\ordem.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\"\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user';\nimport { OrdemServico } from '../models/ordem-servico';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdemService {\n\n  baseURL = 'http://localhost:5124/api/OrdemServico';\n\n  // private getOrdem = `${environment.api}/api/OrdemServico`;\n  // private postOrdem = `${environment.api}/api/OrdemServico`;\n  // private getIdOrdem = `${environment.api}/api/OrdemServico/{id}`;\n  // private putOrdem = `${environment.api}/api/OrdemServico/{id}`;\n  // private getUserOrdem = `${environment.api}/api/OrdemServico/usuario/{idUsuario}`;\n  // private patchIdOrdem = `${environment.api}/api/OrdemServico/Aprovado/{id}`;\n\n  constructor(private http: HttpClient) {}\n\n  public getOrdens(): Observable<OrdemServico[]>{\n    return this.http.get<OrdemServico[]>(this.baseURL);\n  }\n\n  public cadastrarOrdem(ordens: OrdemServico){\n    return this.http.post<User>(this.postOrdem,ordens);\n  }\n\n  public obterOrdemById(){\n    return this.http.get<OrdemServico[]>(this.getIdOrdem);\n  }\n\n  atualizarOrdem(ordens: OrdemServico){\n    return this.http.put<OrdemServico>(this.putOrdem,ordens);\n  }\n\n  obterUserOrdem(){\n    return this.http.get<OrdemServico[]>(this.getUserOrdem);\n  }\n\n  //patch\n  alteraOrdem(ordens: OrdemServico){\n   // const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.http.patch<OrdemServico[]>(this.patchIdOrdem, ordens);\n  }\n\n}\n"],"mappings":";;AAUA,OAAM,MAAOA,YAAY;EAIvB;EACA;EACA;EACA;EACA;EACA;EAEAC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IATxB,KAAAC,OAAO,GAAG,wCAAwC;EASX;EAEhCC,SAASA,CAAA;IACd,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAiB,IAAI,CAACF,OAAO,CAAC;EACpD;EAEOG,cAAcA,CAACC,MAAoB;IACxC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAO,IAAI,CAACC,SAAS,EAACF,MAAM,CAAC;EACpD;EAEOG,cAAcA,CAAA;IACnB,OAAO,IAAI,CAACR,IAAI,CAACG,GAAG,CAAiB,IAAI,CAACM,UAAU,CAAC;EACvD;EAEAC,cAAcA,CAACL,MAAoB;IACjC,OAAO,IAAI,CAACL,IAAI,CAACW,GAAG,CAAe,IAAI,CAACC,QAAQ,EAACP,MAAM,CAAC;EAC1D;EAEAQ,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACb,IAAI,CAACG,GAAG,CAAiB,IAAI,CAACW,YAAY,CAAC;EACzD;EAEA;EACAC,WAAWA,CAACV,MAAoB;IAC/B;IACC,OAAO,IAAI,CAACL,IAAI,CAACgB,KAAK,CAAiB,IAAI,CAACC,YAAY,EAAEZ,MAAM,CAAC;EACnE;EAAC,QAAAa,CAAA,G;qBArCUpB,YAAY,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZzB,YAAY;IAAA0B,OAAA,EAAZ1B,YAAY,CAAA2B,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}