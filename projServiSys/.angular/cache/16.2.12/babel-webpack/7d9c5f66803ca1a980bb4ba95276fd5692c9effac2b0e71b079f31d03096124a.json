{"ast":null,"code":"import { ReplaySubject } from 'rxjs';\nimport { environment } from 'src/environments/environment.development';\nimport { map, take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AccountService {\n  constructor(http) {\n    this.http = http;\n    //var que recebe atualizações de token quando o user logar\n    this.currentUserSource = new ReplaySubject(1);\n    this.currentUser$ = this.currentUserSource.asObservable();\n    this.baseURL = environment.apiURL + 'api/Account';\n  }\n  login(model) {\n    return this.http.post(this.baseURL + 'login', model).pipe(take(1), map(response => {\n      const user = response;\n      if (user) {\n        this.setCurrentUser(user);\n      }\n    }));\n  }\n  logout() {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n    this.currentUserSource.complete();\n  }\n  setCurrentUser(user) {\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n  }\n  static #_ = this.ɵfac = function AccountService_Factory(t) {\n    return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AccountService,\n    factory: AccountService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["ReplaySubject","environment","map","take","AccountService","constructor","http","currentUserSource","currentUser$","asObservable","baseURL","apiURL","login","model","post","pipe","response","user","setCurrentUser","logout","localStorage","removeItem","next","complete","setItem","JSON","stringify","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jamil\\SSintegrado\\projServiSys\\src\\app\\services\\account.service.ts"],"sourcesContent":["import { User } from 'src/app/models/identity/user';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { environment } from 'src/environments/environment.development';\nimport { map, take } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountService {\n\n  //var que recebe atualizações de token quando o user logar\n  private currentUserSource = new ReplaySubject<User>(1);\n  public currentUser$ = this.currentUserSource.asObservable();\n\n  baseURL = environment.apiURL + 'api/Account';\n  constructor(private http: HttpClient) { }\n\n  public login(model: any): Observable<void>{\n    return this.http.post<User>(this.baseURL + 'login', model).pipe(\n      take(1),\n      map((response: User) => {\n      const user = response;\n        if (user){\n          this.setCurrentUser(user)\n        }\n      }\n    )\n    );\n  }\n\n  logout(): void {\n    localStorage.removeItem('user');\n    this.currentUserSource.next(null);\n    this.currentUserSource.complete();\n  }\n\n  public setCurrentUser(user: User): void {\n    localStorage.setItem('user', JSON.stringify(user));\n    this.currentUserSource.next(user);\n  }\n}\n"],"mappings":"AAGA,SAAqBA,aAAa,QAAQ,MAAM;AAChD,SAASC,WAAW,QAAQ,0CAA0C;AACtE,SAASC,GAAG,EAAEC,IAAI,QAAQ,gBAAgB;;;AAK1C,OAAM,MAAOC,cAAc;EAOzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IALxB;IACQ,KAAAC,iBAAiB,GAAG,IAAIP,aAAa,CAAO,CAAC,CAAC;IAC/C,KAAAQ,YAAY,GAAG,IAAI,CAACD,iBAAiB,CAACE,YAAY,EAAE;IAE3D,KAAAC,OAAO,GAAGT,WAAW,CAACU,MAAM,GAAG,aAAa;EACJ;EAEjCC,KAAKA,CAACC,KAAU;IACrB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAO,IAAI,CAACJ,OAAO,GAAG,OAAO,EAAEG,KAAK,CAAC,CAACE,IAAI,CAC7DZ,IAAI,CAAC,CAAC,CAAC,EACPD,GAAG,CAAEc,QAAc,IAAI;MACvB,MAAMC,IAAI,GAAGD,QAAQ;MACnB,IAAIC,IAAI,EAAC;QACP,IAAI,CAACC,cAAc,CAACD,IAAI,CAAC;;IAE7B,CAAC,CACF,CACA;EACH;EAEAE,MAAMA,CAAA;IACJC,YAAY,CAACC,UAAU,CAAC,MAAM,CAAC;IAC/B,IAAI,CAACd,iBAAiB,CAACe,IAAI,CAAC,IAAI,CAAC;IACjC,IAAI,CAACf,iBAAiB,CAACgB,QAAQ,EAAE;EACnC;EAEOL,cAAcA,CAACD,IAAU;IAC9BG,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACT,IAAI,CAAC,CAAC;IAClD,IAAI,CAACV,iBAAiB,CAACe,IAAI,CAACL,IAAI,CAAC;EACnC;EAAC,QAAAU,CAAA,G;qBA/BUvB,cAAc,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAd5B,cAAc;IAAA6B,OAAA,EAAd7B,cAAc,CAAA8B,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}