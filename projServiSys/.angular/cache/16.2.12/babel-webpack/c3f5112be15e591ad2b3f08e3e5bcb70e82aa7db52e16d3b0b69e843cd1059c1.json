{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let FormNovaOsComponent = class FormNovaOsComponent {\n  constructor(modalSS) {\n    this.modalSS = modalSS;\n    this.modalSwitch = false;\n    this.formulario = {};\n  }\n  ngOnInit() {\n    this.modalSS.$modal.subscribe(valor => {\n      this.modalSwitch = valor;\n    });\n  }\n  openModel() {\n    // Verifica se todos os campos obrigat칩rios foram preenchidos\n    if (this.formulario.local && this.formulario.tipo && this.formulario.posicao && this.formulario.serial && this.formulario.descricao) {\n      this.modalSwitch = true; // Abre o modal se todos os campos estiverem preenchidos\n    } else {\n      alert(\"Por favor, preencha todos os campos.\"); // Caso contr치rio, exibe um alerta\n    }\n    //this.modalSwitch = true;\n  }\n};\n\nFormNovaOsComponent = __decorate([Component({\n  selector: 'app-form-nova-os',\n  templateUrl: './form-nova-os.component.html',\n  styleUrls: ['./form-nova-os.component.scss']\n})], FormNovaOsComponent);","map":{"version":3,"names":["Component","FormNovaOsComponent","constructor","modalSS","modalSwitch","formulario","ngOnInit","$modal","subscribe","valor","openModel","local","tipo","posicao","serial","descricao","alert","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\jamil\\projServiSys\\src\\app\\components\\form-nova-os\\form-nova-os.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { SwitchService } from 'src/app/services/switch.service';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-form-nova-os',\n  templateUrl: './form-nova-os.component.html',\n  styleUrls: ['./form-nova-os.component.scss']\n})\nexport class FormNovaOsComponent {\n  \n  modalSwitch: boolean = false;\n  formulario: any = {};\n\n  constructor(private modalSS: SwitchService) {\n\n  }\n\n  ngOnInit(){\n    this.modalSS.$modal.subscribe((valor) => {this.modalSwitch = valor}); \n  }\n\n  openModel(){\n    // Verifica se todos os campos obrigat칩rios foram preenchidos\n    if (this.formulario.local && this.formulario.tipo && this.formulario.posicao && this.formulario.serial && this.formulario.descricao) {\n      this.modalSwitch = true; // Abre o modal se todos os campos estiverem preenchidos\n    } else {\n      alert(\"Por favor, preencha todos os campos.\"); // Caso contr치rio, exibe um alerta\n    }\n    //this.modalSwitch = true;\n  }\n  \n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAK9BC,YAAoBC,OAAsB;IAAtB,KAAAA,OAAO,GAAPA,OAAO;IAH3B,KAAAC,WAAW,GAAY,KAAK;IAC5B,KAAAC,UAAU,GAAQ,EAAE;EAIpB;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACH,OAAO,CAACI,MAAM,CAACC,SAAS,CAAEC,KAAK,IAAI;MAAE,IAAI,CAACL,WAAW,GAAGK,KAAK;IAAA,CAAC,CAAC;EACtE;EAEAC,SAASA,CAAA;IACP;IACA,IAAI,IAAI,CAACL,UAAU,CAACM,KAAK,IAAI,IAAI,CAACN,UAAU,CAACO,IAAI,IAAI,IAAI,CAACP,UAAU,CAACQ,OAAO,IAAI,IAAI,CAACR,UAAU,CAACS,MAAM,IAAI,IAAI,CAACT,UAAU,CAACU,SAAS,EAAE;MACnI,IAAI,CAACX,WAAW,GAAG,IAAI,CAAC,CAAC;KAC1B,MAAM;MACLY,KAAK,CAAC,sCAAsC,CAAC,CAAC,CAAC;;IAEjD;EACF;CAED;;AAvBYf,mBAAmB,GAAAgB,UAAA,EAL/BjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWnB,mBAAmB,CAuB/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}