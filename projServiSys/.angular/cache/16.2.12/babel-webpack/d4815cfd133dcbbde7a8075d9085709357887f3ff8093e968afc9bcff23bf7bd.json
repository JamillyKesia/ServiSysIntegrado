{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class ModalService {\n  constructor() {\n    this.modalAberto = new BehaviorSubject(false);\n  }\n  abrirModal() {\n    this.modalAberto.next(true);\n  }\n  fecharModal() {\n    this.modalAberto.next(false);\n  }\n  isModalAberto() {\n    return this.modalAberto.asObservable();\n  }\n  static #_ = this.ɵfac = function ModalService_Factory(t) {\n    return new (t || ModalService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ModalService,\n    factory: ModalService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","ModalService","constructor","modalAberto","abrirModal","next","fecharModal","isModalAberto","asObservable","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jamil\\projServiSys\\src\\app\\services\\modal.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n  private modalAberto: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  constructor() { }\n\n  abrirModal(): void {\n    this.modalAberto.next(true);\n  }\n\n  fecharModal(): void {\n    this.modalAberto.next(false);\n  }\n\n  isModalAberto(): Observable<boolean> {\n    return this.modalAberto.asObservable();\n  }\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAoB,MAAM;;AAKlD,OAAM,MAAOC,YAAY;EAGvBC,YAAA;IAFQ,KAAAC,WAAW,GAA6B,IAAIH,eAAe,CAAU,KAAK,CAAC;EAEnE;EAEhBI,UAAUA,CAAA;IACR,IAAI,CAACD,WAAW,CAACE,IAAI,CAAC,IAAI,CAAC;EAC7B;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACH,WAAW,CAACE,IAAI,CAAC,KAAK,CAAC;EAC9B;EAEAE,aAAaA,CAAA;IACX,OAAO,IAAI,CAACJ,WAAW,CAACK,YAAY,EAAE;EACxC;EAAC,QAAAC,CAAA,G;qBAfUR,YAAY;EAAA;EAAA,QAAAS,EAAA,G;WAAZT,YAAY;IAAAU,OAAA,EAAZV,YAAY,CAAAW,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}