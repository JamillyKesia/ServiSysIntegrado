{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { ValidatorField } from 'src/app/helpers/validator-field';\nexport let RegistrationComponent = class RegistrationComponent {\n  constructor(fb, accountService, router) {\n    this.fb = fb;\n    this.accountService = accountService;\n    this.router = router;\n    this.user = {};\n  }\n  get f() {\n    return this.form.controls;\n  }\n  ngOnInit() {\n    this.validation();\n  }\n  validation() {\n    const formOptions = {\n      validators: ValidatorField.MustMatch('password', 'confirmePassword')\n    };\n    this.form = this.fb.group({\n      primeiroNome: ['', Validators.required],\n      ultimoNome: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      userName: ['', [Validators.required, Validators.minLength(4)]],\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(8)]],\n      confirmePassword: ['', [Validators.required]],\n      TipoUsuarioEnum: ['', Validators.required],\n      cargo: ['', Validators.required]\n    }, formOptions);\n  }\n  cssValidator(campoForm) {\n    return {\n      'is-invalid': campoForm.errors && campoForm.touched\n    };\n  }\n  register() {\n    this.user = {\n      ...this.form.value\n    };\n    this.accountService.register(this.user).subscribe(() => this.router.navigateByUrl('/principal/registration')\n    //(error: any) => this.toaster.error(error.error);\n    );\n  }\n};\n\nRegistrationComponent = __decorate([Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})], RegistrationComponent);","map":{"version":3,"names":["Component","Validators","ValidatorField","RegistrationComponent","constructor","fb","accountService","router","user","f","form","controls","ngOnInit","validation","formOptions","validators","MustMatch","group","primeiroNome","required","ultimoNome","email","userName","minLength","password","maxLength","confirmePassword","TipoUsuarioEnum","cargo","cssValidator","campoForm","errors","touched","register","value","subscribe","navigateByUrl","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\jamil\\SSintegrado\\projServiSys\\src\\app\\pages\\Coordenador-TI\\registration\\registration.component.ts"],"sourcesContent":["import { AccountService } from '../../../services/account.service';\nimport { Component, OnInit } from '@angular/core';\nimport { AbstractControlOptions, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ValidatorField } from 'src/app/helpers/validator-field';\nimport { User } from 'src/app/models/identity/user';\n\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss']\n})\nexport class RegistrationComponent implements OnInit {\n  \n  user = {} as User;\n  form!: FormGroup;\n\n  constructor(public fb: FormBuilder,\n              private accountService: AccountService,\n              private router: Router\n  ) { }\n\n  get f(): any { return this.form.controls; }\n\n  ngOnInit(): void {\n    this.validation();\n  }\n\n  private validation(): void {\n\n    const formOptions: AbstractControlOptions = {\n      validators: ValidatorField.MustMatch('password', 'confirmePassword')\n    };\n\n    this.form = this.fb.group({\n      primeiroNome: ['', Validators.required],\n      ultimoNome: ['', Validators.required],\n      email: ['', \n        [Validators.required, Validators.email]\n      ],\n      userName: ['', [\n        Validators.required,\n        Validators.minLength(4),\n      ]],\n      password: ['', [\n        Validators.required,\n        Validators.minLength(6),\n        Validators.maxLength(8)\n      ]],\n      confirmePassword: ['', [\n        Validators.required\n      ]],\n      TipoUsuarioEnum: ['', Validators.required],\n      cargo: ['', Validators.required]\n    }, formOptions);\n  }\n\n  public cssValidator(campoForm: FormControl): any {\n    return {'is-invalid': campoForm.errors && campoForm.touched};\n  }\n\n  register(): void {\n    this.user = { ... this.form.value }\n    this.accountService.register(this.user).subscribe(\n      () => this.router.navigateByUrl('/principal/registration')\n      //(error: any) => this.toaster.error(error.error);\n    )\n  }\n\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAsEC,UAAU,QAAQ,gBAAgB;AAExG,SAASC,cAAc,QAAQ,iCAAiC;AASzD,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAKhCC,YAAmBC,EAAe,EACdC,cAA8B,EAC9BC,MAAc;IAFf,KAAAF,EAAE,GAAFA,EAAE;IACD,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAAC,MAAM,GAANA,MAAM;IAL1B,KAAAC,IAAI,GAAG,EAAU;EAMb;EAEJ,IAAIC,CAACA,CAAA;IAAU,OAAO,IAAI,CAACC,IAAI,CAACC,QAAQ;EAAE;EAE1CC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEQA,UAAUA,CAAA;IAEhB,MAAMC,WAAW,GAA2B;MAC1CC,UAAU,EAAEb,cAAc,CAACc,SAAS,CAAC,UAAU,EAAE,kBAAkB;KACpE;IAED,IAAI,CAACN,IAAI,GAAG,IAAI,CAACL,EAAE,CAACY,KAAK,CAAC;MACxBC,YAAY,EAAE,CAAC,EAAE,EAAEjB,UAAU,CAACkB,QAAQ,CAAC;MACvCC,UAAU,EAAE,CAAC,EAAE,EAAEnB,UAAU,CAACkB,QAAQ,CAAC;MACrCE,KAAK,EAAE,CAAC,EAAE,EACR,CAACpB,UAAU,CAACkB,QAAQ,EAAElB,UAAU,CAACoB,KAAK,CAAC,CACxC;MACDC,QAAQ,EAAE,CAAC,EAAE,EAAE,CACbrB,UAAU,CAACkB,QAAQ,EACnBlB,UAAU,CAACsB,SAAS,CAAC,CAAC,CAAC,CACxB,CAAC;MACFC,QAAQ,EAAE,CAAC,EAAE,EAAE,CACbvB,UAAU,CAACkB,QAAQ,EACnBlB,UAAU,CAACsB,SAAS,CAAC,CAAC,CAAC,EACvBtB,UAAU,CAACwB,SAAS,CAAC,CAAC,CAAC,CACxB,CAAC;MACFC,gBAAgB,EAAE,CAAC,EAAE,EAAE,CACrBzB,UAAU,CAACkB,QAAQ,CACpB,CAAC;MACFQ,eAAe,EAAE,CAAC,EAAE,EAAE1B,UAAU,CAACkB,QAAQ,CAAC;MAC1CS,KAAK,EAAE,CAAC,EAAE,EAAE3B,UAAU,CAACkB,QAAQ;KAChC,EAAEL,WAAW,CAAC;EACjB;EAEOe,YAAYA,CAACC,SAAsB;IACxC,OAAO;MAAC,YAAY,EAAEA,SAAS,CAACC,MAAM,IAAID,SAAS,CAACE;IAAO,CAAC;EAC9D;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACzB,IAAI,GAAG;MAAE,GAAI,IAAI,CAACE,IAAI,CAACwB;IAAK,CAAE;IACnC,IAAI,CAAC5B,cAAc,CAAC2B,QAAQ,CAAC,IAAI,CAACzB,IAAI,CAAC,CAAC2B,SAAS,CAC/C,MAAM,IAAI,CAAC5B,MAAM,CAAC6B,aAAa,CAAC,yBAAyB;IACzD;KACD;EACH;CAED;;AAzDYjC,qBAAqB,GAAAkC,UAAA,EALjCrC,SAAS,CAAC;EACTsC,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWrC,qBAAqB,CAyDjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}