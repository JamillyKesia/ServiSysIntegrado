{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let TabelaOrdensComponent = class TabelaOrdensComponent {\n  constructor(modalSS, http) {\n    this.modalSS = modalSS;\n    this.http = http;\n    this.modalSwitch = false;\n    this.ordens = [];\n    // console.log('TO AQUI', environment.api)\n    //this.obterOrdensCadastradas();\n  }\n\n  ngOnInit() {\n    this.modalSS.$modal.subscribe(valor => {\n      this.modalSwitch = valor;\n    });\n    this.obterOrdensCadastradas();\n  }\n  openModel2() {\n    this.modalSwitch = true;\n  }\n  obterOrdensCadastradas() {\n    this.http.get('https://projservisys.azurewebsites.net/api/OrdemServico').subscribe(response => this.ordens = response, error => console.log(error));\n    /*this.http.get<any[]>('https://projservisys.azurewebsites.net/api/OrdemServico')\n    .pipe(\n      catchError(error => {\n        console.error('Erro na requisição:', error);\n        throw 'Erro ao obter as ordens cadastradas. Por favor, tente novamente mais tarde.';\n      })\n    )\n    .subscribe({\n      next: (response: any[]) => {\n        this.ordens = response;\n        console.log('Ordens cadastradas:', this.ordens);\n      },\n      error: (error: any) => {\n        console.error('Erro na requisição:', error);\n        // Trate o erro aqui conforme necessário\n      }\n    });*/\n    // this.apiService.obterOrdem().\n    // subscribe(ordens => this.ordens = ordens)\n    //this.ordens = this.ordemService.obterOrdem();\n  }\n};\n\nTabelaOrdensComponent = __decorate([Component({\n  selector: 'app-tabela-ordens',\n  templateUrl: './tabela-ordens.component.html',\n  styleUrls: ['./tabela-ordens.component.scss']\n})], TabelaOrdensComponent);","map":{"version":3,"names":["Component","TabelaOrdensComponent","constructor","modalSS","http","modalSwitch","ordens","ngOnInit","$modal","subscribe","valor","obterOrdensCadastradas","openModel2","get","response","error","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\jamil\\projServiSys\\src\\app\\components\\tabela-ordens\\tabela-ordens.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { catchError } from 'rxjs';\nimport { SwitchService } from 'src/app/services/switch.service';\nimport { environment } from 'src/environments/environment';\n\n\n@Component({\n  selector: 'app-tabela-ordens',\n  templateUrl: './tabela-ordens.component.html',\n  styleUrls: ['./tabela-ordens.component.scss']\n})\nexport class TabelaOrdensComponent {\n\n  modalSwitch: boolean = false;\n  public ordens: any = [];\n\n  constructor(\n    private modalSS: SwitchService,\n    private http: HttpClient\n  ) {\n      // console.log('TO AQUI', environment.api)\n      //this.obterOrdensCadastradas();\n  }\n\n  ngOnInit(){\n    this.modalSS.$modal.subscribe((valor) => {this.modalSwitch = valor}); \n    this.obterOrdensCadastradas();\n  }\n\n  openModel2(){\n    this.modalSwitch = true;\n  }\n\n  public obterOrdensCadastradas(): void {\n    this.http.get('https://projservisys.azurewebsites.net/api/OrdemServico').subscribe(\n      response => this.ordens = <any[]>response,\n      error => console.log(error)\n    );\n\n    /*this.http.get<any[]>('https://projservisys.azurewebsites.net/api/OrdemServico')\n    .pipe(\n      catchError(error => {\n        console.error('Erro na requisição:', error);\n        throw 'Erro ao obter as ordens cadastradas. Por favor, tente novamente mais tarde.';\n      })\n    )\n    .subscribe({\n      next: (response: any[]) => {\n        this.ordens = response;\n        console.log('Ordens cadastradas:', this.ordens);\n      },\n      error: (error: any) => {\n        console.error('Erro na requisição:', error);\n        // Trate o erro aqui conforme necessário\n      }\n    });*/\n\n    // this.apiService.obterOrdem().\n    // subscribe(ordens => this.ordens = ordens)\n    //this.ordens = this.ordemService.obterOrdem();\n  }\n\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAqC,eAAe;AAW/D,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAKhCC,YACUC,OAAsB,EACtBC,IAAgB;IADhB,KAAAD,OAAO,GAAPA,OAAO;IACP,KAAAC,IAAI,GAAJA,IAAI;IALd,KAAAC,WAAW,GAAY,KAAK;IACrB,KAAAC,MAAM,GAAQ,EAAE;IAMnB;IACA;EACJ;;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACJ,OAAO,CAACK,MAAM,CAACC,SAAS,CAAEC,KAAK,IAAI;MAAE,IAAI,CAACL,WAAW,GAAGK,KAAK;IAAA,CAAC,CAAC;IACpE,IAAI,CAACC,sBAAsB,EAAE;EAC/B;EAEAC,UAAUA,CAAA;IACR,IAAI,CAACP,WAAW,GAAG,IAAI;EACzB;EAEOM,sBAAsBA,CAAA;IAC3B,IAAI,CAACP,IAAI,CAACS,GAAG,CAAC,yDAAyD,CAAC,CAACJ,SAAS,CAChFK,QAAQ,IAAI,IAAI,CAACR,MAAM,GAAUQ,QAAQ,EACzCC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAC5B;IAED;;;;;;;;;;;;;;;;;IAkBA;IACA;IACA;EACF;CAED;;AAnDYd,qBAAqB,GAAAiB,UAAA,EALjClB,SAAS,CAAC;EACTmB,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EACWpB,qBAAqB,CAmDjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}