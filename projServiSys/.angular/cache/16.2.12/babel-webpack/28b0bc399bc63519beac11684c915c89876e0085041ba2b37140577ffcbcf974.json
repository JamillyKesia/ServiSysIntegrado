{"ast":null,"code":"export const authCoordGuard = (route, state) => {\n  const isLoggedIn = true; // Supondo que o usuário está autenticado\n  const isCoord = true; // Supondo que o usuário é um Funcionário\n  /* if (!isLoggedIn || !isCoord) {\n     // Se o usuário não estiver autenticado ou não for Funcionário\n     console.log('Acesso não autorizado para Coordenador');\n     return false; // Impedir o acesso à rota protegida\n   }*/\n  return true; // Permitir o acesso à rota protegida\n};","map":{"version":3,"names":["authCoordGuard","route","state","isLoggedIn","isCoord"],"sources":["C:\\Users\\jamil\\projServiSys\\src\\app\\_guard\\auth-coord.guard.ts"],"sourcesContent":["import { CanActivateFn } from '@angular/router';\n\nexport const authCoordGuard: CanActivateFn = (route, state) => {\n  const isLoggedIn = true; // Supondo que o usuário está autenticado\n  const isCoord = true; // Supondo que o usuário é um Funcionário\n /* if (!isLoggedIn || !isCoord) {\n    // Se o usuário não estiver autenticado ou não for Funcionário\n    console.log('Acesso não autorizado para Coordenador');\n    return false; // Impedir o acesso à rota protegida\n  }*/\n  return true; // Permitir o acesso à rota protegida\n};\n"],"mappings":"AAEA,OAAO,MAAMA,cAAc,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EAC5D,MAAMC,UAAU,GAAG,IAAI,CAAC,CAAC;EACzB,MAAMC,OAAO,GAAG,IAAI,CAAC,CAAC;EACvB;;;;;EAKC,OAAO,IAAI,CAAC,CAAC;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}