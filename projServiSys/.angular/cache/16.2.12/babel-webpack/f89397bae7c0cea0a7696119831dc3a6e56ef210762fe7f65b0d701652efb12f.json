{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  //private updateUser = `${environment.api}/api/Account/UpdateUser`;\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    // Account\n    this.getUser = environment.api + '/api/Account/GetUser';\n    this.registerUser = environment.api + '/api/Account/RegisterUser';\n    this.loginUser = environment.api + '/api/Account/Login';\n    this.updateUser = environment.api + '/api/Account/UpdateUser';\n  }\n  obterUser() {\n    return this.httpClient.get(this.getUser);\n  }\n  cadastrarUser(users) {\n    return this.httpClient.post(this.registerUser, users);\n  }\n  logarUser(users) {\n    return this.httpClient.post(this.loginUser, users);\n  }\n  atualizarUser(users) {\n    return this.httpClient.put(this.updateUser, users);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","UserService","constructor","httpClient","getUser","api","registerUser","loginUser","updateUser","obterUser","get","cadastrarUser","users","post","logarUser","atualizarUser","put","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jamil\\projServiSys\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\"\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  // Account\n  private getUser = environment.api + '/api/Account/GetUser';\n  private registerUser = environment.api + '/api/Account/RegisterUser';\n  private loginUser = environment.api + '/api/Account/Login';\n  private updateUser = environment.api + '/api/Account/UpdateUser';\n  //private updateUser = `${environment.api}/api/Account/UpdateUser`;\n\n  constructor(private httpClient: HttpClient) { }\n\n  obterUser(){\n    return this.httpClient.get<User[]>(this.getUser);\n  }\n\n  cadastrarUser(users: User){\n    return this.httpClient.post<User>(this.registerUser,users);\n  }\n\n  logarUser(users: User){\n    return this.httpClient.post<User>(this.loginUser,users);\n  }\n\n  atualizarUser(users: User){\n    return this.httpClient.put<User>(this.updateUser,users);\n  }\n\n\n}\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,WAAW;EAMtB;EAEAC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAP9B;IACQ,KAAAC,OAAO,GAAGJ,WAAW,CAACK,GAAG,GAAG,sBAAsB;IAClD,KAAAC,YAAY,GAAGN,WAAW,CAACK,GAAG,GAAG,2BAA2B;IAC5D,KAAAE,SAAS,GAAGP,WAAW,CAACK,GAAG,GAAG,oBAAoB;IAClD,KAAAG,UAAU,GAAGR,WAAW,CAACK,GAAG,GAAG,yBAAyB;EAGlB;EAE9CI,SAASA,CAAA;IACP,OAAO,IAAI,CAACN,UAAU,CAACO,GAAG,CAAS,IAAI,CAACN,OAAO,CAAC;EAClD;EAEAO,aAAaA,CAACC,KAAW;IACvB,OAAO,IAAI,CAACT,UAAU,CAACU,IAAI,CAAO,IAAI,CAACP,YAAY,EAACM,KAAK,CAAC;EAC5D;EAEAE,SAASA,CAACF,KAAW;IACnB,OAAO,IAAI,CAACT,UAAU,CAACU,IAAI,CAAO,IAAI,CAACN,SAAS,EAACK,KAAK,CAAC;EACzD;EAEAG,aAAaA,CAACH,KAAW;IACvB,OAAO,IAAI,CAACT,UAAU,CAACa,GAAG,CAAO,IAAI,CAACR,UAAU,EAACI,KAAK,CAAC;EACzD;EAAC,QAAAK,CAAA,G;qBAxBUhB,WAAW,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXrB,WAAW;IAAAsB,OAAA,EAAXtB,WAAW,CAAAuB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}