{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class OrdemCompartilhadaService {\n  constructor() {\n    this.ordemSource = new BehaviorSubject(null);\n    this.ordemAtual = this.ordemSource.asObservable();\n  }\n  mudarOrdem(ordens) {\n    this.ordemSource.next(ordens);\n  }\n  static #_ = this.ɵfac = function OrdemCompartilhadaService_Factory(t) {\n    return new (t || OrdemCompartilhadaService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrdemCompartilhadaService,\n    factory: OrdemCompartilhadaService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","OrdemCompartilhadaService","constructor","ordemSource","ordemAtual","asObservable","mudarOrdem","ordens","next","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jamil\\SSintegrado\\projServiSys\\src\\app\\services\\ordem-compartilhada.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { OrdemServico } from '../models/ordem-servico';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdemCompartilhadaService {\n\n  private ordemSource = new BehaviorSubject<OrdemServico | null>(null);\n  ordemAtual = this.ordemSource.asObservable();\n\n  constructor() { }\n\n  mudarOrdem(ordens: OrdemServico) {\n    this.ordemSource.next(ordens);\n  }\n\n}\n"],"mappings":"AAEA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,yBAAyB;EAKpCC,YAAA;IAHQ,KAAAC,WAAW,GAAG,IAAIH,eAAe,CAAsB,IAAI,CAAC;IACpE,KAAAI,UAAU,GAAG,IAAI,CAACD,WAAW,CAACE,YAAY,EAAE;EAE5B;EAEhBC,UAAUA,CAACC,MAAoB;IAC7B,IAAI,CAACJ,WAAW,CAACK,IAAI,CAACD,MAAM,CAAC;EAC/B;EAAC,QAAAE,CAAA,G;qBATUR,yBAAyB;EAAA;EAAA,QAAAS,EAAA,G;WAAzBT,yBAAyB;IAAAU,OAAA,EAAzBV,yBAAyB,CAAAW,IAAA;IAAAC,UAAA,EAFxB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}