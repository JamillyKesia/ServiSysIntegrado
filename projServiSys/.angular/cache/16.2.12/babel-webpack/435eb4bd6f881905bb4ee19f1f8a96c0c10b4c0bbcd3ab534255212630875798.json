{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthLoginService {\n  constructor() {\n    this.usuarioLogado = null;\n  }\n  fazerLogin(usuario, senha) {\n    // Lógica de autenticação aqui (pode ser uma chamada HTTP para um servidor)\n    // Exemplo simplificado\n    if (usuario === 'funcionario' && senha === '123') {\n      this.usuarioLogado = 'funcionario';\n      return true;\n    } else if (usuario === 'coordenador' && senha === '456') {\n      this.usuarioLogado = 'coordenador';\n      return true;\n    } else if (usuario === 'cpd' && senha === '789') {\n      this.usuarioLogado = 'cpd';\n      return true;\n    }\n    return false;\n  }\n  getUsuarioLogado() {\n    return this.usuarioLogado;\n  }\n  logout() {\n    this.usuarioLogado = null;\n  }\n  static #_ = this.ɵfac = function AuthLoginService_Factory(t) {\n    return new (t || AuthLoginService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthLoginService,\n    factory: AuthLoginService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthLoginService","constructor","usuarioLogado","fazerLogin","usuario","senha","getUsuarioLogado","logout","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jamil\\projServiSys\\src\\app\\services\\auth-login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthLoginService {\n\n  private usuarioLogado: string | null = null;\n\n  constructor() { }\n\n  fazerLogin(usuario: string, senha: string): boolean {\n    // Lógica de autenticação aqui (pode ser uma chamada HTTP para um servidor)\n    // Exemplo simplificado\n    if (usuario === 'funcionario' && senha === '123') {\n      this.usuarioLogado = 'funcionario';\n      return true;\n    } else if (usuario === 'coordenador' && senha === '456') {\n      this.usuarioLogado = 'coordenador';\n      return true;\n    } else if (usuario === 'cpd' && senha === '789') {\n      this.usuarioLogado = 'cpd';\n      return true;\n    }\n    return false;\n  }\n\n  getUsuarioLogado(): string | null {\n    return this.usuarioLogado;\n  }\n\n  logout(): void {\n    this.usuarioLogado = null;\n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,gBAAgB;EAI3BC,YAAA;IAFQ,KAAAC,aAAa,GAAkB,IAAI;EAE3B;EAEhBC,UAAUA,CAACC,OAAe,EAAEC,KAAa;IACvC;IACA;IACA,IAAID,OAAO,KAAK,aAAa,IAAIC,KAAK,KAAK,KAAK,EAAE;MAChD,IAAI,CAACH,aAAa,GAAG,aAAa;MAClC,OAAO,IAAI;KACZ,MAAM,IAAIE,OAAO,KAAK,aAAa,IAAIC,KAAK,KAAK,KAAK,EAAE;MACvD,IAAI,CAACH,aAAa,GAAG,aAAa;MAClC,OAAO,IAAI;KACZ,MAAM,IAAIE,OAAO,KAAK,KAAK,IAAIC,KAAK,KAAK,KAAK,EAAE;MAC/C,IAAI,CAACH,aAAa,GAAG,KAAK;MAC1B,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;EAEAI,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACJ,aAAa;EAC3B;EAEAK,MAAMA,CAAA;IACJ,IAAI,CAACL,aAAa,GAAG,IAAI;EAC3B;EAAC,QAAAM,CAAA,G;qBA5BUR,gBAAgB;EAAA;EAAA,QAAAS,EAAA,G;WAAhBT,gBAAgB;IAAAU,OAAA,EAAhBV,gBAAgB,CAAAW,IAAA;IAAAC,UAAA,EAFf;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}