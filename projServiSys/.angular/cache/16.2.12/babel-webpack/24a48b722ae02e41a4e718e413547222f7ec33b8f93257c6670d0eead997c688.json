{"ast":null,"code":"export class ValidatorField {\n  static MustMatch(controlName, matchingControlName) {\n    // return (group: AbstractControl) => {\n    //     const formGroup = group as FormGroup;\n    //     const control = formGroup.controls[controlName];\n    //     const matchingControl = formGroup.controls[matchingControlName];\n    //     if(matchingControl.errors && !matchingControl.errors.mustMatch){\n    //         return null;\n    //     }\n    //     if(control.value !== matchingControl.value){\n    //         matchingControl.setErrors({ mustMatch: true });\n    //     }\n    //     else{\n    //         matchingControl.setErrors(null);\n    //     }\n    // }\n  }\n}","map":{"version":3,"names":["ValidatorField","MustMatch","controlName","matchingControlName"],"sources":["C:\\Users\\jamil\\projServiSys\\src\\app\\helpers\\validator-field.ts"],"sourcesContent":["import { AbstractControl, FormGroup } from '@angular/forms';\n\nexport class ValidatorField {\n    static MustMatch(controlName: string, matchingControlName: string): any{\n        // return (group: AbstractControl) => {\n        //     const formGroup = group as FormGroup;\n        //     const control = formGroup.controls[controlName];\n        //     const matchingControl = formGroup.controls[matchingControlName];\n        \n        //     if(matchingControl.errors && !matchingControl.errors.mustMatch){\n        //         return null;\n        //     }\n\n        //     if(control.value !== matchingControl.value){\n        //         matchingControl.setErrors({ mustMatch: true });\n        //     }\n        //     else{\n        //         matchingControl.setErrors(null);\n        //     }\n        \n        // }\n    }\n}\n"],"mappings":"AAEA,OAAM,MAAOA,cAAc;EACvB,OAAOC,SAASA,CAACC,WAAmB,EAAEC,mBAA2B;IAC7D;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAEA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}