{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { UserService } from 'src/app/services/user.service';\nimport { UserLogin } from 'src/app/models/identity/user-login';\nexport let LoginComponent = class LoginComponent {\n  constructor(accountService, router /*,\n                                     private toaster: ToastrService*/) {\n    this.accountService = accountService;\n    this.router = router;\n    //model: any = {};\n    this.model = new UserLogin();\n  }\n  ngOnInit() {}\n  login() {\n    this.accountService.login(this.model).subscribe(() => {\n      this.router.navigateByUrl('/principal/home');\n    }, error => {\n      if (error.status == 401) {\n        //this.toaster.error('usuario invalido');\n      } else console.error(error);\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  providers: [UserService]\n})], LoginComponent);","map":{"version":3,"names":["Component","UserService","UserLogin","LoginComponent","constructor","accountService","router","model","ngOnInit","login","subscribe","navigateByUrl","error","status","console","__decorate","selector","templateUrl","styleUrls","providers"],"sources":["C:\\Users\\jamil\\SSintegrado\\projServiSys\\src\\app\\pages\\login\\login.component.ts"],"sourcesContent":["import { AccountService } from './../../services/account.service';\nimport { Component} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { UserService } from 'src/app/services/user.service';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { UserLogin } from 'src/app/models/identity/user-login';\nimport { Router } from '@angular/router';\nimport { FormsModule } from '@angular/forms'; // Importe o FormsModule\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  providers: [UserService]\n})\nexport class LoginComponent {\n\n  //model: any = {};\n  model: UserLogin = new UserLogin();\n\n  constructor(private accountService: AccountService,\n              private router: Router/*,\n              private toaster: ToastrService*/){}\n\n    ngOnInit(): void {}\n\n    public login(): void {\n      this.accountService.login(this.model).subscribe(\n        () => { \n          this.router.navigateByUrl('/principal/home');\n        },\n        (error: any) => {\n          if (error.status == 401){\n            //this.toaster.error('usuario invalido');\n          }\n          else console.error(error);\n        }\n      )\n    }\n}"],"mappings":";AACA,SAASA,SAAS,QAAO,eAAe;AAExC,SAASC,WAAW,QAAQ,+BAA+B;AAG3D,SAASC,SAAS,QAAQ,oCAAoC;AAUvD,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAKzBC,YAAoBC,cAA8B,EAC9BC,MAAc;qEAAA,EACU;IAFxB,KAAAD,cAAc,GAAdA,cAAc;IACd,KAAAC,MAAM,GAANA,MAAM;IAJ1B;IACA,KAAAC,KAAK,GAAc,IAAIL,SAAS,EAAE;EAIY;EAE5CM,QAAQA,CAAA,GAAU;EAEXC,KAAKA,CAAA;IACV,IAAI,CAACJ,cAAc,CAACI,KAAK,CAAC,IAAI,CAACF,KAAK,CAAC,CAACG,SAAS,CAC7C,MAAK;MACH,IAAI,CAACJ,MAAM,CAACK,aAAa,CAAC,iBAAiB,CAAC;IAC9C,CAAC,EACAC,KAAU,IAAI;MACb,IAAIA,KAAK,CAACC,MAAM,IAAI,GAAG,EAAC;QACtB;MAAA,CACD,MACIC,OAAO,CAACF,KAAK,CAACA,KAAK,CAAC;IAC3B,CAAC,CACF;EACH;CACH;AAxBYT,cAAc,GAAAY,UAAA,EAN1Bf,SAAS,CAAC;EACTgB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB,CAAC;EACrCC,SAAS,EAAE,CAAClB,WAAW;CACxB,CAAC,C,EACWE,cAAc,CAwB1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}