{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ModalComponent = class ModalComponent {\n  constructor(modalSS) {\n    this.modalSS = modalSS;\n  }\n  closeModal() {\n    this.modalSS.$modal.emit(false);\n  }\n};\nModalComponent = __decorate([Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss']\n})], ModalComponent);","map":{"version":3,"names":["Component","ModalComponent","constructor","modalSS","closeModal","$modal","emit","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\jamil\\projServiSys\\src\\app\\components\\modal\\modal.component.ts"],"sourcesContent":["import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.scss']\n})\nexport class ModalComponent {\n\n  constructor(private modalSS: SwitchService) { }\n\n  closeModal(){\n    this.modalSS.$modal.emit(false);\n  }\n\n  /*@Input() size? = 'md';\n  @Input() title? = 'Modal title';\n\n  @Output() closeEvent = new EventEmitter();\n  @Output() submitEvent = new EventEmitter();\n\n  constructor(private elementRef: ElementRef){}\n\n  close(): void {\n    this.elementRef.nativeElement.remove();\n    this.closeEvent.emit();\n  }\n\n  submit(): void{\n    this.elementRef.nativeElement.remove();\n    this.submitEvent.emit();\n  }*/\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAiD,eAAe;AAO3E,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAEzBC,YAAoBC,OAAsB;IAAtB,KAAAA,OAAO,GAAPA,OAAO;EAAmB;EAE9CC,UAAUA,CAAA;IACR,IAAI,CAACD,OAAO,CAACE,MAAM,CAACC,IAAI,CAAC,KAAK,CAAC;EACjC;CAoBD;AA1BYL,cAAc,GAAAM,UAAA,EAL1BP,SAAS,CAAC;EACTQ,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWT,cAAc,CA0B1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}