{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthLoginService {\n  constructor() {\n    this.usuarioLogado = null;\n    this.credenciais = {\n      funcionario: {\n        usuario: 'funcionario',\n        senha: '123'\n      },\n      coordenador: {\n        usuario: 'coordenador',\n        senha: '456'\n      },\n      cpd: {\n        usuario: 'cpd',\n        senha: '789'\n      }\n    };\n  }\n  fazerLogin(usuario, senha) {\n    // Lógica de autenticação aqui (pode ser uma chamada HTTP para um servidor)\n    // Exemplo simplificado\n    const usuarioValido = this.credenciais[usuario];\n    if (usuarioValido && usuarioValido.senha === senha) {\n      this.usuarioLogado = usuario;\n      localStorage.setItem('usuarioLogado', usuario);\n      return true;\n    }\n    return false;\n  }\n  getUsuarioLogado() {\n    return this.usuarioLogado;\n  }\n  logout() {\n    console.log(this.usuarioLogado);\n    this.usuarioLogado = null;\n    localStorage.removeItem('usuarioLogado');\n  }\n  static #_ = this.ɵfac = function AuthLoginService_Factory(t) {\n    return new (t || AuthLoginService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthLoginService,\n    factory: AuthLoginService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthLoginService","constructor","usuarioLogado","credenciais","funcionario","usuario","senha","coordenador","cpd","fazerLogin","usuarioValido","localStorage","setItem","getUsuarioLogado","logout","console","log","removeItem","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jamil\\projServiSys\\src\\app\\services\\auth-login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n// Definindo o tipo para as credenciais dos usuários\ninterface Credenciais {\n  [key: string]: { usuario: string; senha: string };\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthLoginService {\n  private usuarioLogado: string | null = null;\n  private credenciais: Credenciais = {\n    funcionario: { usuario: 'funcionario', senha: '123' },\n    coordenador: { usuario: 'coordenador', senha: '456' },\n    cpd: { usuario: 'cpd', senha: '789' }\n  };\n\n  constructor() { }\n\n  fazerLogin(usuario: string, senha: string): boolean {\n    // Lógica de autenticação aqui (pode ser uma chamada HTTP para um servidor)\n    // Exemplo simplificado\n    const usuarioValido = this.credenciais[usuario];\n    if (usuarioValido && usuarioValido.senha === senha) {\n      this.usuarioLogado = usuario;\n      localStorage.setItem('usuarioLogado', usuario);\n      return true;\n    }\n    return false;\n  }\n\n  getUsuarioLogado(): string | null {\n    return this.usuarioLogado;\n  }\n\n  logout(): void {\n    console.log(this.usuarioLogado);\n    this.usuarioLogado = null;\n    localStorage.removeItem('usuarioLogado');\n  }\n}\n"],"mappings":";AAUA,OAAM,MAAOA,gBAAgB;EAQ3BC,YAAA;IAPQ,KAAAC,aAAa,GAAkB,IAAI;IACnC,KAAAC,WAAW,GAAgB;MACjCC,WAAW,EAAE;QAAEC,OAAO,EAAE,aAAa;QAAEC,KAAK,EAAE;MAAK,CAAE;MACrDC,WAAW,EAAE;QAAEF,OAAO,EAAE,aAAa;QAAEC,KAAK,EAAE;MAAK,CAAE;MACrDE,GAAG,EAAE;QAAEH,OAAO,EAAE,KAAK;QAAEC,KAAK,EAAE;MAAK;KACpC;EAEe;EAEhBG,UAAUA,CAACJ,OAAe,EAAEC,KAAa;IACvC;IACA;IACA,MAAMI,aAAa,GAAG,IAAI,CAACP,WAAW,CAACE,OAAO,CAAC;IAC/C,IAAIK,aAAa,IAAIA,aAAa,CAACJ,KAAK,KAAKA,KAAK,EAAE;MAClD,IAAI,CAACJ,aAAa,GAAGG,OAAO;MAC5BM,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEP,OAAO,CAAC;MAC9C,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;EAEAQ,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACX,aAAa;EAC3B;EAEAY,MAAMA,CAAA;IACJC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACd,aAAa,CAAC;IAC/B,IAAI,CAACA,aAAa,GAAG,IAAI;IACzBS,YAAY,CAACM,UAAU,CAAC,eAAe,CAAC;EAC1C;EAAC,QAAAC,CAAA,G;qBA9BUlB,gBAAgB;EAAA;EAAA,QAAAmB,EAAA,G;WAAhBnB,gBAAgB;IAAAoB,OAAA,EAAhBpB,gBAAgB,CAAAqB,IAAA;IAAAC,UAAA,EAFf;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}