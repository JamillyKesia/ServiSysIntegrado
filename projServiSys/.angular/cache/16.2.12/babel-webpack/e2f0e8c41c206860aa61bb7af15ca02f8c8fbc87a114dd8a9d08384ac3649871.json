{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    // Account\n    this.getUser = `${environment.api}/api/Account/GetUser`;\n    this.registerUser = `${environment.api}/api/Account/RegisterUser`;\n    this.loginUser = `${environment.api}/api/Account/Login`;\n    this.updateUser = `${environment.api}/api/Account/UpdateUser`;\n    // Lançamento Ordem\n    this.urlOrdem = `${environment.api}/ordem`;\n  }\n  //usuários \n  obterUser() {\n    return this.httpClient.get(this.getUser);\n  }\n  cadastrarUser(users) {\n    return this.httpClient.post(this.registerUser, ordens);\n  }\n  logarUser(ordens) {\n    return this.httpClient.post < User(this.loginUser, ordens);\n  }\n  // ordens de serviço\n  obterOrdem() {\n    return this.httpClient.get(this.urlOrdem);\n  }\n  cadastrarOrdem(ordens) {\n    return this.httpClient.post(this.urlOrdem, ordens);\n  }\n  static #_ = this.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["environment","ApiService","constructor","httpClient","getUser","api","registerUser","loginUser","updateUser","urlOrdem","obterUser","get","cadastrarUser","users","post","ordens","logarUser","User","obterOrdem","cadastrarOrdem","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\jamil\\projServiSys\\src\\app\\services\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\"\nimport { environment } from 'src/environments/environment';\nimport { Ordem } from '../ordem';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  // Account\n  private getUser = `${environment.api}/api/Account/GetUser`;\n  private registerUser = `${environment.api}/api/Account/RegisterUser`;\n  private loginUser = `${environment.api}/api/Account/Login`;\n  private updateUser = `${environment.api}/api/Account/UpdateUser`;\n\n  // Lançamento Ordem\n  private urlOrdem = `${environment.api}/ordem`;\n\n  constructor(private httpClient: HttpClient) {\n  }\n\n  //usuários \n  obterUser(){\n    return this.httpClient.get<User[]>(this.getUser);\n  }\n\n  cadastrarUser(users: User){\n    return this.httpClient.post<User>(this.registerUser,ordens);\n  }\n\n  logarUser(ordens: Ordem){\n    return this.httpClient.post<User(this.loginUser,ordens);\n  }\n\n  // ordens de serviço\n  obterOrdem(){\n    return this.httpClient.get<Ordem[]>(this.urlOrdem);\n  }\n\n  cadastrarOrdem(ordens: Ordem){\n    return this.httpClient.post<Ordem>(this.urlOrdem,ordens);\n  }\n\n}\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,UAAU;EAWrBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAT9B;IACQ,KAAAC,OAAO,GAAG,GAAGJ,WAAW,CAACK,GAAG,sBAAsB;IAClD,KAAAC,YAAY,GAAG,GAAGN,WAAW,CAACK,GAAG,2BAA2B;IAC5D,KAAAE,SAAS,GAAG,GAAGP,WAAW,CAACK,GAAG,oBAAoB;IAClD,KAAAG,UAAU,GAAG,GAAGR,WAAW,CAACK,GAAG,yBAAyB;IAEhE;IACQ,KAAAI,QAAQ,GAAG,GAAGT,WAAW,CAACK,GAAG,QAAQ;EAG7C;EAEA;EACAK,SAASA,CAAA;IACP,OAAO,IAAI,CAACP,UAAU,CAACQ,GAAG,CAAS,IAAI,CAACP,OAAO,CAAC;EAClD;EAEAQ,aAAaA,CAACC,KAAW;IACvB,OAAO,IAAI,CAACV,UAAU,CAACW,IAAI,CAAO,IAAI,CAACR,YAAY,EAACS,MAAM,CAAC;EAC7D;EAEAC,SAASA,CAACD,MAAa;IACrB,OAAO,IAAI,CAACZ,UAAU,CAACW,IAAI,GAACG,IAAI,CAAC,IAAI,CAACV,SAAS,EAACQ,MAAM,CAAC;EACzD;EAEA;EACAG,UAAUA,CAAA;IACR,OAAO,IAAI,CAACf,UAAU,CAACQ,GAAG,CAAU,IAAI,CAACF,QAAQ,CAAC;EACpD;EAEAU,cAAcA,CAACJ,MAAa;IAC1B,OAAO,IAAI,CAACZ,UAAU,CAACW,IAAI,CAAQ,IAAI,CAACL,QAAQ,EAACM,MAAM,CAAC;EAC1D;EAAC,QAAAK,CAAA,G;qBAlCUnB,UAAU,EAAAoB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAVxB,UAAU;IAAAyB,OAAA,EAAVzB,UAAU,CAAA0B,IAAA;IAAAC,UAAA,EAFT;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}